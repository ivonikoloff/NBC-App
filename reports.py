import os
import json
import zipfile
import hashlib
from datetime import datetime
from reportlab.lib.pagesizes import A4
from reportlab.lib import colors
from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle
from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer, Table, TableStyle, Image
from reportlab.pdfbase import pdfmetrics
from reportlab.pdfbase.ttfonts import TTFont
from reportlab.pdfbase.cidfonts import UnicodeCIDFont

# ----------------------------------------------------------
# –ù–ê–°–¢–†–û–ô–ö–ò –ù–ê –®–†–ò–§–¢–ê
# ----------------------------------------------------------
try:
    # –ê–∫–æ –¥–æ–±–∞–≤–∏—à Azbuki.ttf –≤ static/, –º–∞—Ö–Ω–∏ –∫–æ–º–µ–Ω—Ç–∞—Ä–∞ –Ω–∞ —Ä–µ–¥–∞ –ø–æ-–¥–æ–ª—É:
    # pdfmetrics.registerFont(TTFont('Azbuki', 'static/Azbuki.ttf'))
    pdfmetrics.registerFont(UnicodeCIDFont("HeiseiMin-W3"))  # fallback –∑–∞ –∫–∏—Ä–∏–ª–∏—Ü–∞
    FONT_NAME = "HeiseiMin-W3"
except:
    FONT_NAME = "Helvetica"

# ----------------------------------------------------------
# –î–ê–ù–ù–ò –ó–ê –û–†–ì–ê–ù–ò–ó–ê–¶–ò–Ø–¢–ê
# ----------------------------------------------------------
ORG_FILE = "data.json"
if os.path.exists(ORG_FILE):
    with open(ORG_FILE, "r", encoding="utf-8") as f:
        data = json.load(f)
else:
    data = {}

–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è = data.get("–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è", {
    "–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ": "–°–¥—Ä—É–∂–µ–Ω–∏–µ ‚Äû–ù–æ–≤–∞ –±—ä–ª–≥–∞—Ä—Å–∫–∞ –∫—É—Ö–Ω—è‚Äú",
    "–ï–ò–ö": "208289975",
    "–∞–¥—Ä–µ—Å": "–≥—Ä. –í–∞—Ä–Ω–∞, –∂.–∫. –ú–ª–∞–¥–æ—Å—Ç, –±—É–ª. ‚Ññ108–ê, –≤—Ö. 1, –µ—Ç. 3, –∞–ø. 4",
    "—Ç–µ–ª–µ—Ñ–æ–Ω": "0899605928",
    "email": "newbgcuisine@gmail.com",
    "–∏–∑–≥–æ—Ç–≤–∏–ª": "–ò–≤–∞–π–ª–æ (—Å–µ–∫—Ä–µ—Ç–∞—Ä)",
    "–æ–¥–æ–±—Ä–∏–ª": "–ö–∞–ª–æ—è–Ω –ô–æ—Ä–¥–∞–Ω–æ–≤ –ö–æ–ª–µ–≤ (–ø—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª)"
})

# ----------------------------------------------------------
# –í–ê–õ–£–¢–ù–ò –ù–ê–°–¢–†–û–ô–ö–ò
# ----------------------------------------------------------
EUR_RATE = 1.95583

def —Ñ–æ—Ä–º–∞—Ç_–≤–∞–ª—É—Ç–∏(—Å—Ç–æ–π–Ω–æ—Å—Ç_–≤_–ª–µ–≤–∞):
    """–í—Ä—ä—â–∞ —Å—Ç–æ–π–Ω–æ—Å—Ç—Ç–∞ –≤ –ª–µ–≤–∞ –∏ –µ–≤—Ä–æ –∫–∞—Ç–æ –Ω–∏–∑–æ–≤–µ."""
    –ª–µ–≤–æ–≤–µ = float(—Å—Ç–æ–π–Ω–æ—Å—Ç_–≤_–ª–µ–≤–∞)
    –µ–≤—Ä–æ = –ª–µ–≤–æ–≤–µ / EUR_RATE
    return f"{–ª–µ–≤–æ–≤–µ:,.2f}", f"{–µ–≤—Ä–æ:,.2f}"

# ----------------------------------------------------------
# –ì–õ–ê–í–ù–ê –§–£–ù–ö–¶–ò–Ø –ó–ê –°–™–ó–î–ê–í–ê–ù–ï –ù–ê PDF
# ----------------------------------------------------------
def —Å—ä–∑–¥–∞–π_pdf(–∏–º–µ_–Ω–∞_—Ñ–∞–π–ª, –∑–∞–≥–ª–∞–≤–∏–µ, —Ç–∞–±–ª–∏—Ü–∏, –≥–æ–¥–∏–Ω–∞):
    –ø–∞–ø–∫–∞ = os.path.join("reports", str(–≥–æ–¥–∏–Ω–∞))
    os.makedirs(–ø–∞–ø–∫–∞, exist_ok=True)
    –ø—ä—Ç = os.path.join(–ø–∞–ø–∫–∞, –∏–º–µ_–Ω–∞_—Ñ–∞–π–ª)

    doc = SimpleDocTemplate(–ø—ä—Ç, pagesize=A4)
    story = []
    styles = getSampleStyleSheet()
    styles.add(ParagraphStyle(name="Heading", fontName=FONT_NAME, fontSize=14, alignment=1, spaceAfter=10))
    styles.add(ParagraphStyle(name="NormalBG", fontName=FONT_NAME, fontSize=11, leading=14))

    # –õ–æ–≥–æ
    if os.path.exists("static/logo.png"):
        story.append(Image("static/logo.png", width=80, height=80))
        story.append(Spacer(1, 10))

    # –ó–∞–≥–ª–∞–≤–Ω–∞ —á–∞—Å—Ç
    header_text = f"""
    <b>{–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è['–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ']}</b><br/>
    –ï–ò–ö: {–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è['–ï–ò–ö']}<br/>
    {–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è['–∞–¥—Ä–µ—Å']}<br/>
    –¢–µ–ª.: {–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è['—Ç–µ–ª–µ—Ñ–æ–Ω']} | Email: {–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è['email']}<br/><br/>
    <b>{–∑–∞–≥–ª–∞–≤–∏–µ.upper()}</b><br/>
    –û—Ç—á–µ—Ç–µ–Ω –ø–µ—Ä–∏–æ–¥: 01.01.{–≥–æ–¥–∏–Ω–∞} ‚Äì 31.12.{–≥–æ–¥–∏–Ω–∞}<br/><br/>
    –ö—É—Ä—Å: 1 EUR = 1.95583 BGN (—Ñ–∏–∫—Å–∏—Ä–∞–Ω –ø–æ –†–µ—à–µ–Ω–∏–µ –Ω–∞ –ë–ù–ë)<br/><br/>
    """
    story.append(Paragraph(header_text, styles["NormalBG"]))
    story.append(Spacer(1, 12))

    # –¢–∞–±–ª–∏—Ü–∏
    for t in —Ç–∞–±–ª–∏—Ü–∏:
        —Ç–∞–±–ª–∏—Ü–∞ = Table(t, hAlign="LEFT")
        —Ç–∞–±–ª–∏—Ü–∞.setStyle(TableStyle([
            ("FONTNAME", (0, 0), (-1, -1), FONT_NAME),
            ("FONTSIZE", (0, 0), (-1, -1), 10),
            ("GRID", (0, 0), (-1, -1), 0.25, colors.black),
            ("BACKGROUND", (0, 0), (-1, 0), colors.lightgrey),
            ("ALIGN", (1, 0), (-1, -1), "RIGHT"),
        ]))
        story.append(—Ç–∞–±–ª–∏—Ü–∞)
        story.append(Spacer(1, 12))

    # –ü–æ–¥–ø–∏—Å–∏
    –¥–∞—Ç–∞ = datetime.now().strftime("%d.%m.%Y %H:%M")
    –ø–æ–¥–ø–∏—Å = f"""
    <br/><br/>
    –ò–∑–≥–æ—Ç–≤–∏–ª: _______________________ ({–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è['–∏–∑–≥–æ—Ç–≤–∏–ª']})<br/>
    –û–¥–æ–±—Ä–∏–ª: _______________________ ({–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è['–æ–¥–æ–±—Ä–∏–ª']})<br/>
    –î–∞—Ç–∞ –∏ —á–∞—Å –Ω–∞ –∏–∑–≥–æ—Ç–≤—è–Ω–µ: {–¥–∞—Ç–∞}
    """
    story.append(Paragraph(–ø–æ–¥–ø–∏—Å, styles["NormalBG"]))

    doc.build(story)
    print(f"‚úÖ –°—ä–∑–¥–∞–¥–µ–Ω —Ñ–∞–π–ª: {–ø—ä—Ç}")

# ----------------------------------------------------------
# –û–¢–ß–ï–¢–ò
# ----------------------------------------------------------
def –≥–µ–Ω–µ—Ä–∏—Ä–∞–π_–±–∞–ª–∞–Ω—Å(–¥–∞–Ω–Ω–∏):
    –≥–æ–¥–∏–Ω–∞ = datetime.now().year
    —Ç–∞–±–ª–∏—Ü–∞ = [["–ê–ö–¢–ò–í", "–°—É–º–∞ (–ª–≤.)", "–°—É–º–∞ (–µ–≤—Ä–æ)"]]
    –∞–∫—Ç–∏–≤–∏ = [
        ("–ü–∞—Ä–∏—á–Ω–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ (501, 503)", 3200),
        ("–î—ä–ª–≥–æ—Ç—Ä–∞–π–Ω–∏ –∞–∫—Ç–∏–≤–∏", 0),
        ("–î—Ä—É–≥–∏ –∞–∫—Ç–∏–≤–∏", 0),
    ]
    for –∏–º–µ, –ª–≤ in –∞–∫—Ç–∏–≤–∏:
        –ª–≤_—Å—Ç—Ä, –µ–≤—Ä–æ_—Å—Ç—Ä = —Ñ–æ—Ä–º–∞—Ç_–≤–∞–ª—É—Ç–∏(–ª–≤)
        —Ç–∞–±–ª–∏—Ü–∞.append([–∏–º–µ, –ª–≤_—Å—Ç—Ä, –µ–≤—Ä–æ_—Å—Ç—Ä])

    —Ç–∞–±–ª–∏—Ü–∞ += [["", "", ""], ["–ü–ê–°–ò–í", "–°—É–º–∞ (–ª–≤.)", "–°—É–º–∞ (–µ–≤—Ä–æ)"]]
    –ø–∞—Å–∏–≤–∏ = [
        ("–û—Å–Ω–æ–≤–µ–Ω –∫–∞–ø–∏—Ç–∞–ª (123)", 2000),
        ("–†–µ–∑–µ—Ä–≤–∏ –∏ —Ñ–æ–Ω–¥–æ–≤–µ", 500),
        ("–§–∏–Ω–∞–Ω—Å–æ–≤ —Ä–µ–∑—É–ª—Ç–∞—Ç", 700),
    ]
    for –∏–º–µ, –ª–≤ in –ø–∞—Å–∏–≤–∏:
        –ª–≤_—Å—Ç—Ä, –µ–≤—Ä–æ_—Å—Ç—Ä = —Ñ–æ—Ä–º–∞—Ç_–≤–∞–ª—É—Ç–∏(–ª–≤)
        —Ç–∞–±–ª–∏—Ü–∞.append([–∏–º–µ, –ª–≤_—Å—Ç—Ä, –µ–≤—Ä–æ_—Å—Ç—Ä])

    —Ç–∞–±–ª–∏—Ü–∞.append(["", "", ""])
    —Ç–∞–±–ª–∏—Ü–∞.append(["–ö—É—Ä—Å: 1 EUR = 1.95583 BGN", "", ""])
    —Å—ä–∑–¥–∞–π_pdf(f"–ë–∞–ª–∞–Ω—Å_{–≥–æ–¥–∏–Ω–∞}.pdf", "–°—á–µ—Ç–æ–≤–æ–¥–µ–Ω –±–∞–ª–∞–Ω—Å –ø–æ –ù–°–° 9", [—Ç–∞–±–ª–∏—Ü–∞], –≥–æ–¥–∏–Ω–∞)

def –≥–µ–Ω–µ—Ä–∏—Ä–∞–π_–æ–ø—Ä(–¥–∞–Ω–Ω–∏):
    –≥–æ–¥–∏–Ω–∞ = datetime.now().year
    —Ç–∞–±–ª–∏—Ü–∞ = [["–†–ê–ó–î–ï–õ", "–ù–ê–ò–ú–ï–ù–û–í–ê–ù–ò–ï", "–°—É–º–∞ (–ª–≤.)", "–°—É–º–∞ (–µ–≤—Ä–æ)"]]
    —Ä–µ–¥–æ–≤–µ = [
        ("I", "–ü—Ä–∏—Ö–æ–¥–∏ –æ—Ç –Ω–µ—Å—Ç–æ–ø–∞–Ω—Å–∫–∞ –¥–µ–π–Ω–æ—Å—Ç (703)", 3000),
        ("II", "–ü—Ä–∏—Ö–æ–¥–∏ –æ—Ç –¥–∞—Ä–µ–Ω–∏—è", 1200),
        ("III", "–†–∞–∑—Ö–æ–¥–∏ –∑–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–∏ (602)", 800),
        ("IV", "–†–∞–∑—Ö–æ–¥–∏ –∑–∞ –≤—ä–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è", 1000),
        ("V", "–ò–∑–ª–∏—à—ä–∫ (–¥–µ—Ñ–∏—Ü–∏—Ç) –∑–∞ –ø–µ—Ä–∏–æ–¥–∞", 2400),
    ]
    for —Ä–∞–∑–¥–µ–ª, –∏–º–µ, –ª–≤ in —Ä–µ–¥–æ–≤–µ:
        –ª–≤_—Å—Ç—Ä, –µ–≤—Ä–æ_—Å—Ç—Ä = —Ñ–æ—Ä–º–∞—Ç_–≤–∞–ª—É—Ç–∏(–ª–≤)
        —Ç–∞–±–ª–∏—Ü–∞.append([—Ä–∞–∑–¥–µ–ª, –∏–º–µ, –ª–≤_—Å—Ç—Ä, –µ–≤—Ä–æ_—Å—Ç—Ä])

    —Ç–∞–±–ª–∏—Ü–∞.append(["", "", "", ""])
    —Ç–∞–±–ª–∏—Ü–∞.append(["–ö—É—Ä—Å: 1 EUR = 1.95583 BGN", "", "", ""])
    —Å—ä–∑–¥–∞–π_pdf(f"–û–ü–†_{–≥–æ–¥–∏–Ω–∞}.pdf", "–û—Ç—á–µ—Ç –∑–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç–µ –∏ —Ä–∞–∑—Ö–æ–¥–∏—Ç–µ –ø–æ –ù–°–° 9", [—Ç–∞–±–ª–∏—Ü–∞], –≥–æ–¥–∏–Ω–∞)

def –≥–µ–Ω–µ—Ä–∏—Ä–∞–π_—Å–ø—Ä–∞–≤–∫–∞_—á–ª–µ–Ω–æ–≤–µ(–¥–∞–Ω–Ω–∏):
    –≥–æ–¥–∏–Ω–∞ = datetime.now().year
    —á–ª–µ–Ω–æ–≤–µ = –¥–∞–Ω–Ω–∏.get("—á–ª–µ–Ω–æ–≤–µ", [
        {"–∏–º–µ": "–ü–µ—Ç—ä—Ä –ü–µ—Ç—Ä–æ–≤", "–≤–Ω–æ—Å": 20},
        {"–∏–º–µ": "–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞", "–≤–Ω–æ—Å": 15},
        {"–∏–º–µ": "–ì–µ–æ—Ä–≥–∏ –ì–µ–æ—Ä–≥–∏–µ–≤", "–≤–Ω–æ—Å": 30},
    ])
    —Ç–∞–±–ª–∏—Ü–∞ = [["–ß–ª–µ–Ω", "–ü–ª–∞—Ç–µ–Ω —á–ª–µ–Ω—Å–∫–∏ –≤–Ω–æ—Å (–ª–≤.)", "–ü–ª–∞—Ç–µ–Ω —á–ª–µ–Ω—Å–∫–∏ –≤–Ω–æ—Å (–µ–≤—Ä–æ)"]]
    for —á in —á–ª–µ–Ω–æ–≤–µ:
        –ª–≤_—Å—Ç—Ä, –µ–≤—Ä–æ_—Å—Ç—Ä = —Ñ–æ—Ä–º–∞—Ç_–≤–∞–ª—É—Ç–∏(—á["–≤–Ω–æ—Å"])
        —Ç–∞–±–ª–∏—Ü–∞.append([—á["–∏–º–µ"], –ª–≤_—Å—Ç—Ä, –µ–≤—Ä–æ_—Å—Ç—Ä])
    —Ç–∞–±–ª–∏—Ü–∞.append(["", "", ""])
    —Ç–∞–±–ª–∏—Ü–∞.append(["–ö—É—Ä—Å: 1 EUR = 1.95583 BGN", "", ""])
    —Å—ä–∑–¥–∞–π_pdf(f"–°–ø—Ä–∞–≤–∫–∞_—á–ª–µ–Ω—Å–∫–∏_–≤–Ω–æ—Å_{–≥–æ–¥–∏–Ω–∞}.pdf", "–°–ø—Ä–∞–≤–∫–∞ –∑–∞ —á–ª–µ–Ω—Å–∫–∏ –≤–Ω–æ—Å", [—Ç–∞–±–ª–∏—Ü–∞], –≥–æ–¥–∏–Ω–∞)

# ----------------------------------------------------------
# –ê–†–•–ò–í–ò–†–ê–ù–ï –° MD5 –ü–û–î–ü–ò–°
# ----------------------------------------------------------
def –∞—Ä—Ö–∏–≤–∏—Ä–∞–π_–æ—Ç—á–µ—Ç–∏(–≥–æ–¥–∏–Ω–∞):
    –ø–∞–ø–∫–∞ = os.path.join("reports", str(–≥–æ–¥–∏–Ω–∞))
    zip_path = os.path.join(–ø–∞–ø–∫–∞, f"–û—Ç—á–µ—Ç–∏_{–≥–æ–¥–∏–Ω–∞}.zip")

    with zipfile.ZipFile(zip_path, "w", zipfile.ZIP_DEFLATED) as zipf:
        for —Ñ–∞–π–ª in os.listdir(–ø–∞–ø–∫–∞):
            if —Ñ–∞–π–ª.endswith(".pdf"):
                zipf.write(os.path.join(–ø–∞–ø–∫–∞, —Ñ–∞–π–ª), —Ñ–∞–π–ª)

    # MD5 –ø–æ–¥–ø–∏—Å
    md5_hash = hashlib.md5()
    with open(zip_path, "rb") as f:
        md5_hash.update(f.read())
    md5_value = md5_hash.hexdigest()

    # –õ–æ–≥ —Ñ–∞–π–ª
    –ª–æ–≥ = os.path.join(–ø–∞–ø–∫–∞, f"metadata_{–≥–æ–¥–∏–Ω–∞}.txt")
    with open(–ª–æ–≥, "w", encoding="utf-8") as meta:
        meta.write(f"–û—Ç—á–µ—Ç–∏ –∑–∞ {–≥–æ–¥–∏–Ω–∞}\n")
        meta.write(f"–°—ä–∑–¥–∞–¥–µ–Ω: {datetime.now().strftime('%d.%m.%Y %H:%M:%S')}\n")
        meta.write(f"MD5 –ø–æ–¥–ø–∏—Å: {md5_value}\n")
        meta.write(f"–§–∞–π–ª–æ–≤–µ: {', '.join([f for f in os.listdir(–ø–∞–ø–∫–∞) if f.endswith('.pdf')])}\n")
    print(f"üì¶ –ê—Ä—Ö–∏–≤ —Å—ä–∑–¥–∞–¥–µ–Ω: {zip_path}")
    print(f"üîí MD5 –ø–æ–¥–ø–∏—Å: {md5_value}")

# ----------------------------------------------------------
# –ì–õ–ê–í–ï–ù –ò–ù–¢–ï–†–§–ï–ô–°
# ----------------------------------------------------------
def –≥–µ–Ω–µ—Ä–∏—Ä–∞–π_–≤—Å–∏—á–∫–∏():
    if os.path.exists(ORG_FILE):
        with open(ORG_FILE, "r", encoding="utf-8") as f:
            –¥–∞–Ω–Ω–∏ = json.load(f)
    else:
        –¥–∞–Ω–Ω–∏ = {}
    –≥–µ–Ω–µ—Ä–∏—Ä–∞–π_–±–∞–ª–∞–Ω—Å(–¥–∞–Ω–Ω–∏)
    –≥–µ–Ω–µ—Ä–∏—Ä–∞–π_–æ–ø—Ä(–¥–∞–Ω–Ω–∏)
    –≥–µ–Ω–µ—Ä–∏—Ä–∞–π_—Å–ø—Ä–∞–≤–∫–∞_—á–ª–µ–Ω–æ–≤–µ(–¥–∞–Ω–Ω–∏)
    –∞—Ä—Ö–∏–≤–∏—Ä–∞–π_–æ—Ç—á–µ—Ç–∏(datetime.now().year)

if __name__ == "__main__":
    –≥–µ–Ω–µ—Ä–∏—Ä–∞–π_–≤—Å–∏—á–∫–∏()
